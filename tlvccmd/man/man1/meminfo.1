.TH meminfo 1
.SH NAME
meminfo \- list system memory usage
.SH SYNOPSIS
.B meminfo
.RB [ \-a ]
.RB [ \-m ]
.RB [ \-f ]
.RB [ \-t ]
.RB [ \-b ]
.RB [ \-s ]
.RB [ \-h ]
.RB [ \-M ]
.RB [ \-P ]
.br
.SS OPTIONS
Defaults to showing all memory (equivalent to -aftbs).
.TP 5
.B -a
Show memory in use by applications
.TP 5
.B -m
Show main memory sorted by segment
.TP 5
.B -f
Show free memory
.TP 5
.B -t
Show tty and driver memory
.TP 5
.B -b
Show system buffer and pipe memory
.TP 5
.B -s
Show system task, inode and file memory
.TP 5
.B -M
Show system RAM layout (heap and main memory) in 'ASCII graphics'
.TP 5
.B -P
Like -M, but include active processes with code and data segments in the 'picture'
.TP 5
.B -h
Show help
.SH DESCRIPTION
.B meminfo
without options
traverses the kernel local heap and displays a line for each in-use or free entry. 
Since the local heap also manages the system memory outside of the kernel
normally available for running application programs, the in-use or free
segments of system memory outside the kernel
(sometimes called external, conventional or simply main memory) will also be displayed.
.PP
For every line, the local heap address, type and size are displayed.
For main memory, the main memory segment, type, size and access count
are also displayed. Each of these are detailed below.
.PP
At the bottom of the listing, the total size and free size of the kernel
local heap are displayed, along with the main memory system total,
used and free space in kilobytes (KB).
.PP
By inspecting the main memory entries, one can determine
how much contiguous memory is available for running additional programs,
as well as the amount of memory used for kernel system buffers, and
application program code and data segments.
.PP
Each line of the listing contains:
.TP 10
HEAP
The kernel local heap address.
.TP 10
TYPE
The type of memory allocated (or free).
.TP 10
SIZE
The size in bytes of the allocated or free local memory.
.PP
For main memory (type MEM), the following additional items are displayed:
.TP 10
SEG
The address of the main memory segment.
.TP 13
STYPE
What the main memory segment is used for (or free).
.TP 13
SSIZE
The size in bytes of the allocated or free main memory segment.
.TP 10
CNT
The access count (0 is free, >1 is shared).
.SH "LOCAL HEAP TYPES"
Local memory allocation types can be one of the following:
.TP 10
MEM
Main memory segment.
.TP 10
TTY
TTY input or output buffer.
.TP 10
NETB
Network buffers and buffer headers.
.TP 10
DRVR
Buffers allocated by various drivers, such as disk or floppy drivers for `bounce buffers', necessary
when using XMS for block subsystem buffers.
.TP 10
CACH
System level 1 buffer cache.
.TP 10
BUFH
System buffer headers. The buffer data contents may be in main or XMS memory.
.TP 10
PIPE
Open pipe buffer.
.TP 10
TASK
Kernel per process data structure.
.TP 10
INOD
System inodes.
.TP 10
FILE
System open files.
.TP 10
free
Unallocated memory in the local heap.
.SH "MAIN MEMORY TYPES"
Main memory allocation types can be one of the following:
.TP 10
CSEG
Running application code segment.
.TP 10
DSEG
Running application data segment.
.TP 10
BUF
Block subsystem (level 2) buffers, 1024 bytes per buffer.
.TP 10
RDSK
Ramdisk data.
.TP 10
free
Unallocated main memory.
.SH SYSTEM MEMORY LAYOUT
.B meminfo -M
displays the physical layout of all RAM configured on the system: Main memory, kernel memory, low memory,
upper memory blocks (UMB), the high memory area (HMA) and XMS. When the system boots,
initial allocations are made for application and heap memory respectively. After startup completes,
and depending on the kernel configuration, 
some code and data may no longer be needed and the memory they occupy is released to either the heap or 
main memory depending on its location. These additions will not be contiguous with the initially 
allocated memory segments, but still represent useful resources. 
.PP
The 
.B -M
option displays these memory blocks - their start and end addresses and size, as a supplement to the 
information provided by the default 
.B meminfo 
display and the
.B -m
option display.
.PP
Memory outside the 'standard' PC RAM of 640k will be displayed automatically if available. 
I.e. UMBs will always be displayed if found, HMA and XMS will be displayed only if XMS is configured in the
kernel. This means that HMA may be in use and not showing in 
.BR meminfo .
A minor issue since having available XMS and not using it is in most cases a waste of resources. 
The
.B -P
options expands on the display created using 
.B -M
by including the running processes and their data and code segment addresses in the graphic 
visualization. This provides a very useful and informative view of the status and operations
of the system.
.PP
Note that in all cases, 
.B meminfo
displays addresses in units of 'paragraphs', the unit used by the Intel segmented memory architecture. 
This is visualized using the format '12AB:0', the ':0' indicating it's an address. Offsets, typically 
inside the kernel data segment, are prepended with a '+' sign. Sizes have a 'K' suffix
indicating kilobytes, 1024 bytes

.SH FILES
.TP 10
.B /dev/kmem
.SH BUGS
.B meminfo
does not yet display XMS memory usage.
.SH AUTHORS
Greg Haerr (greg@censoft.com),
memory visualizations (-P, -M) by Helge Skrivervik
